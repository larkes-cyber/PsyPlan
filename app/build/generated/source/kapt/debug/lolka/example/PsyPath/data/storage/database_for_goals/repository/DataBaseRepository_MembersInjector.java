// Generated by Dagger (https://dagger.dev).
package lolka.example.PsyPath.data.storage.database_for_goals.repository;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import lolka.example.PsyPath.data.storage.database_for_goals.dao.TaskDao;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataBaseRepository_MembersInjector implements MembersInjector<DataBaseRepository> {
  private final Provider<TaskDao> taskDaoProvider;

  public DataBaseRepository_MembersInjector(Provider<TaskDao> taskDaoProvider) {
    this.taskDaoProvider = taskDaoProvider;
  }

  public static MembersInjector<DataBaseRepository> create(Provider<TaskDao> taskDaoProvider) {
    return new DataBaseRepository_MembersInjector(taskDaoProvider);
  }

  @Override
  public void injectMembers(DataBaseRepository instance) {
    injectTaskDao(instance, taskDaoProvider.get());
  }

  @InjectedFieldSignature("lolka.example.PsyPath.data.storage.database_for_goals.repository.DataBaseRepository.taskDao")
  public static void injectTaskDao(DataBaseRepository instance, TaskDao taskDao) {
    instance.taskDao = taskDao;
  }
}
