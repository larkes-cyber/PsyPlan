// Generated by Dagger (https://dagger.dev).
package lolka.example.PsyPath.di;

import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import lolka.example.PsyPath.data.storage.database_for_goals.AppDatabase;
import lolka.example.PsyPath.data.storage.database_for_goals.dao.SomeDao;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideSomeDaoFactory implements Factory<SomeDao> {
  private final DataModule module;

  private final Provider<AppDatabase> databaseProvider;

  public DataModule_ProvideSomeDaoFactory(DataModule module,
      Provider<AppDatabase> databaseProvider) {
    this.module = module;
    this.databaseProvider = databaseProvider;
  }

  @Override
  public SomeDao get() {
    return provideSomeDao(module, databaseProvider.get());
  }

  public static DataModule_ProvideSomeDaoFactory create(DataModule module,
      Provider<AppDatabase> databaseProvider) {
    return new DataModule_ProvideSomeDaoFactory(module, databaseProvider);
  }

  public static SomeDao provideSomeDao(DataModule instance, AppDatabase database) {
    return Preconditions.checkNotNullFromProvides(instance.provideSomeDao(database));
  }
}
