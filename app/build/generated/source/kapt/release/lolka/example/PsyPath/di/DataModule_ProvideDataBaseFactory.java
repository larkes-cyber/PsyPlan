// Generated by Dagger (https://dagger.dev).
package lolka.example.PsyPath.di;

import android.content.Context;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import lolka.example.PsyPath.data.storage.database_for_goals.AppDatabase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DataModule_ProvideDataBaseFactory implements Factory<AppDatabase> {
  private final DataModule module;

  private final Provider<Context> contextProvider;

  public DataModule_ProvideDataBaseFactory(DataModule module, Provider<Context> contextProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
  }

  @Override
  public AppDatabase get() {
    return provideDataBase(module, contextProvider.get());
  }

  public static DataModule_ProvideDataBaseFactory create(DataModule module,
      Provider<Context> contextProvider) {
    return new DataModule_ProvideDataBaseFactory(module, contextProvider);
  }

  public static AppDatabase provideDataBase(DataModule instance, Context context) {
    return Preconditions.checkNotNullFromProvides(instance.provideDataBase(context));
  }
}
