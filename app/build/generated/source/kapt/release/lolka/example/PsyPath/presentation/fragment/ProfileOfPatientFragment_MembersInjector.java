// Generated by Dagger (https://dagger.dev).
package lolka.example.PsyPath.presentation.fragment;

import dagger.MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.InjectedFieldSignature;
import javax.inject.Provider;
import lolka.example.PsyPath.presentation.viewmodel.PatientProfileViewModelFactory;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class ProfileOfPatientFragment_MembersInjector implements MembersInjector<ProfileOfPatientFragment> {
  private final Provider<PatientProfileViewModelFactory> vmFactoryProvider;

  public ProfileOfPatientFragment_MembersInjector(
      Provider<PatientProfileViewModelFactory> vmFactoryProvider) {
    this.vmFactoryProvider = vmFactoryProvider;
  }

  public static MembersInjector<ProfileOfPatientFragment> create(
      Provider<PatientProfileViewModelFactory> vmFactoryProvider) {
    return new ProfileOfPatientFragment_MembersInjector(vmFactoryProvider);
  }

  @Override
  public void injectMembers(ProfileOfPatientFragment instance) {
    injectVmFactory(instance, vmFactoryProvider.get());
  }

  @InjectedFieldSignature("lolka.example.PsyPath.presentation.fragment.ProfileOfPatientFragment.vmFactory")
  public static void injectVmFactory(ProfileOfPatientFragment instance,
      PatientProfileViewModelFactory vmFactory) {
    instance.vmFactory = vmFactory;
  }
}
